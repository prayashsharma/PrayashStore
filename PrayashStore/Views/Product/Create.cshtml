@model PrayashStore.ViewModels.ProductAddFormViewModel

@{
    ViewBag.Title = "Add new Product";
}

<h3>@ViewBag.Title</h3>
<br />

@using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
        @Html.TextAreaFor(model => model.Description, new { @class = "form-control vertical-resize" })
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" }) 
        @Html.TextBoxFor(model => model.Price, new { @class = "form-control" }) 
        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
        @Html.EnumDropDownListFor(model => model.Gender, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label" })
        @Html.DropDownListFor(x => x.Category, Model.Categories.Select(x => new SelectListItem { Text = x.Name, Value = x.Id.ToString() }), "", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label for="file">Upload Thumbnail</label>
        <div class="input-group">
            <label class="input-group-btn">
                <span class="btn btn-primary">
                    Browse <input type="file" style="display: none;" name="thumbnail">
                </span>
            </label>
            <input type="text" class="form-control" readonly>
        </div>
        @Html.ValidationMessageFor(m => m.Thumbnail, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label for="file">Upload Images</label>
        <div class="input-group">
            <label class="input-group-btn">
                <span class="btn btn-primary">
                    Browse <input type="file" style="display: none;" name="images" multiple>                    
                </span>
            </label>
            <input type="text" class="form-control" readonly>
        </div>
        @Html.ValidationMessageFor(m => m.Images, "", new { @class = "text-danger" })
    </div>
    <br />
    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>

    <div class="form-group">
        @Html.ActionLink("Cancel and Go Back", "Index")
    </div>
}


@section scripts{
    <script>
        $(function () {
            // We can attach the `fileselect` event to all file inputs on the page
            $(document).on('change', ':file', function () {
                var input = $(this),
                    numFiles = input.get(0).files ? input.get(0).files.length : 1,
                    label = input.val().replace(/C:\\fakepath\\/i, '');
                    
                input.trigger('fileselect', [numFiles, label]);
            });

            // We can watch for our custom `fileselect` event like this
            $(document).ready(function () {
                $(':file').on('fileselect', function (event, numFiles, label) {

                    var input = $(this).parents('.input-group').find(':text'),
                        log = numFiles > 1 ? numFiles + ' files selected' : label;

                    if (input.length) {
                        input.val(log);
                    } else {
                        if (log) alert(log);
                    }

                });
            });
        });
 
    </script>
}
